#!/usr/bin/env node
/* jshint undef: true, unused: true, esversion: 6 */



//
//  G E T
//  P A C K A G E S

const
  app = require("../app"),
  debug = require("debug")("!NC:server"),
  http = require("http");



//--------------------------------------
//  Get port from environment
//  and store in Express
//--------------------------------------

const port = normalizePort(process.env.PORT || "3003");
app.set("port", port);



//--------------------------------------
//  Create server
//--------------------------------------

const server = http.createServer(app);


//--------------------------------------
//  Listen on provided port, on
//  all network interfaces
//--------------------------------------

server.listen(port);
server.on("error", onError);
server.on("listening", onListening);




//--------------------------------------
//  Normalize a port into a
//  number, string, or false
//--------------------------------------

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}



//--------------------------------------
//  Event listener for
//  server "error" event
//--------------------------------------

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // Handle specific listen errors with friendly messages
  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges");
      process.exit(1);
      break;

    case "EADDRINUSE":
      console.error(bind + " is already in use");
      process.exit(1);
      break;

    default:
      throw error;
  }
}



//--------------------------------------
//  Event listener for
//  server "listening" event
//--------------------------------------

function onListening() {
  const
    addr = server.address(),
    bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;

  console.log(
    "" +
    "\n     (^ᴗ^)ノ  " + process.env.npm_package_name + "\n" +
    "\n     Running on " + bind + "\n"
  );

  debug("Listening on " + bind);
}
